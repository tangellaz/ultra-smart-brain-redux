{"ast":null,"code":"var _jsxFileName = \"/home/tywa/Documents/TheCompleteWebDeveloper/smart-brain/smart-brain-Redux/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { addFaceBox, changeInput } from './actions';\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  // input: '',\n  imageUrl: '',\n  // box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    box: state.addFaceBox.box,\n    input: state.inputStateChange.input,\n    user: state.userInfoUpdate.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayFaceBox: box => dispatch(addFaceBox(box)),\n    onInputChange: event => dispatch(changeInput(event.target.value)),\n    loadUser: data => dispatch(updateUserInfo(data))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      console.log(data);\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.onButtonSubmit = () => {\n      const _this$props = this.props,\n            displayFaceBox = _this$props.displayFaceBox,\n            input = _this$props.input;\n      this.setState({\n        imageUrl: input\n      }); // console.log('click');\n\n      fetch(' https://boiling-sea-92403.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: input\n        })\n      }).then(response => response.json()).then(response => {\n        // console.log(response)\n        // console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n        if (response) {\n          fetch(' https://boiling-sea-92403.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            })); // this.setState({user: {\n            //   entries: count\n            // }})\n          }).catch(console.log);\n        }\n\n        displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route;\n    const _this$props2 = this.props,\n          box = _this$props2.box,\n          onInputChange = _this$props2.onInputChange;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      isSignedIn: isSignedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })) : this.state.route === 'signin' ? React.createElement(SignIn, {\n      onRouteChange: this.onRouteChange,\n      loadUser: this.loadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      onRouteChange: this.onRouteChange,\n      loadUser: this.loadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/tywa/Documents/TheCompleteWebDeveloper/smart-brain/smart-brain-Redux/src/App.js"],"names":["React","Component","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","SignIn","Register","Particles","connect","addFaceBox","changeInput","particleOptions","particles","number","value","density","enable","value_area","initialState","imageUrl","route","isSignedIn","user","id","name","email","entries","joined","mapStateToProps","state","box","input","inputStateChange","userInfoUpdate","mapDispatchToProps","dispatch","displayFaceBox","onInputChange","event","target","loadUser","data","updateUserInfo","App","constructor","setState","calculateFaceLocation","console","log","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","onButtonSubmit","props","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport { connect } from 'react-redux';\n\nimport { addFaceBox, changeInput } from './actions';\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n      }\n    }\n}\n\nconst initialState = {\n      // input: '',\n      imageUrl: '',\n      // box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n}\n\nconst mapStateToProps = state => {\n  return {\n    box: state.addFaceBox.box,\n    input: state.inputStateChange.input,\n    user: state.userInfoUpdate.user\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    displayFaceBox: (box) => dispatch(addFaceBox(box)),\n    onInputChange: (event) => dispatch(changeInput(event.target.value)),\n    loadUser: (data) => dispatch(updateUserInfo(data))\n  }\n}\n\nclass App extends Component {\n \n  constructor() {\n    super()\n    this.state = initialState\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n\n  // componentDidMount() {\n  //   console.log(this.props.store.getState())\n  // }\n\n  // componentDidMount() {\n  //   fetch('http://localhost:3000/')\n  //     .then(response => response.json())\n  //     //.then(data => console.log(data))\n  //     .then(console.log)\n  // }\n\n  calculateFaceLocation = (data) => {\n    console.log(data);\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  // displayFaceBox = (box) => {\n  //   // console.log(box);\n  //   this.setState({box});\n  // }\n\n  // onInputChange = (event) => {\n  //   // console.log(event.target.value);\n  //   this.setState({input: event.target.value})\n  // }\n\n  onButtonSubmit = () => {\n    const { displayFaceBox, input } = this.props;\n    this.setState({imageUrl: input});\n    // console.log('click');\n      fetch(' https://boiling-sea-92403.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n          // console.log(response)\n          // console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n          if (response) {\n            fetch(' https://boiling-sea-92403.herokuapp.com/image', {\n              method: 'put',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({\n              id: this.state.user.id\n              })\n            })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, {entries: count}))\n              // this.setState({user: {\n              //   entries: count\n              // }})\n            })\n            .catch(console.log)\n          }\n          displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route} = this.state;\n    const { box, onInputChange } = this.props;\n    return (\n      <div className=\"App\">\n      <Particles className='particles'\n        params={particleOptions} />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn}/>\n        { route === 'home'\n        ? <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            <ImageLinkForm\n              onInputChange={onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            /> \n            <FaceRecognition box={box} imageUrl={imageUrl}/>\n          </div>\n        : (\n            this.state.route === 'signin' \n            ? <SignIn \n                onRouteChange={this.onRouteChange}\n                loadUser={this.loadUser}\n              />\n            : <Register\n                onRouteChange={this.onRouteChange}\n                loadUser={this.loadUser}\n              />\n          )\n        \n        }\n      </div>\n    );\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}