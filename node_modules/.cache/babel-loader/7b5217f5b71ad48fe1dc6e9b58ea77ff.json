{"ast":null,"code":"var _jsxFileName = \"/home/tywa/Documents/TheCompleteWebDeveloper/smart-brain/smart-brain-Redux/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { addFaceBox, changeInput, updateUserInfo, updateImageUrl, updateSignIn, updateRoute } from './actions';\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    box: state.addFaceBox.box,\n    input: state.inputStateChange.input,\n    user: state.userInfoUpdate.user,\n    imageUrl: state.imageUrlUpdate.imageUrl,\n    inputCheck: state.imageUrlUpdate.inputCheck,\n    isSignedIn: state.signInUpdate.isSignedIn,\n    route: state.routeUpdate.route\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayFaceBox: box => dispatch(addFaceBox(box)),\n    onInputChange: event => dispatch(changeInput(event.target.value)),\n    loadUser: data => dispatch(updateUserInfo(data)),\n    onImageUrlInput: url => dispatch(updateImageUrl(url)),\n    signInChange: bool => dispatch(updateSignIn(bool)),\n    routeChange: route => dispatch(updateRoute(route))\n  };\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.onButtonSubmit = () => {\n      const _this$props = this.props,\n            displayFaceBox = _this$props.displayFaceBox,\n            input = _this$props.input,\n            onImageUrlInput = _this$props.onImageUrlInput,\n            loadUser = _this$props.loadUser,\n            user = _this$props.user; // let {inputCheck} = this.props;\n      // console.log(\"inputCheck BEFORE onImageURLInput: \",inputCheck);\n\n      onImageUrlInput(input);\n      let inputCheck = this.props.inputCheck;\n      console.log(\"inputCheck AFTER onImageURLInput: \", inputCheck);\n      fetch(' https://boiling-sea-92403.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch(' https://boiling-sea-92403.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: user.id\n            })\n          }).then(response => response.json()).then(count => {\n            loadUser(count);\n          }).catch(console.log);\n        }\n\n        displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n      console.log(\"inputCheck AFTER onImageURLInput AND AFTER FETCH: \", inputCheck);\n    };\n\n    this.onRouteChange = route => {\n      const _this$props2 = this.props,\n            signInChange = _this$props2.signInChange,\n            routeChange = _this$props2.routeChange;\n\n      if (route === 'signout') {\n        signInChange(false);\n        routeChange('signin');\n      } else if (route === 'home') {\n        signInChange(true);\n        routeChange(route);\n      } else {\n        routeChange(route);\n      }\n    };\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          box = _this$props3.box,\n          onInputChange = _this$props3.onInputChange,\n          loadUser = _this$props3.loadUser,\n          user = _this$props3.user,\n          imageUrl = _this$props3.imageUrl,\n          isSignedIn = _this$props3.isSignedIn,\n          route = _this$props3.route;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      isSignedIn: isSignedIn,\n      route: route,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: user.name,\n      entries: user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(SignIn, {\n      onRouteChange: this.onRouteChange,\n      loadUser: loadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      onRouteChange: this.onRouteChange,\n      loadUser: loadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/tywa/Documents/TheCompleteWebDeveloper/smart-brain/smart-brain-Redux/src/App.js"],"names":["React","Component","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","SignIn","Register","Particles","connect","addFaceBox","changeInput","updateUserInfo","updateImageUrl","updateSignIn","updateRoute","particleOptions","particles","number","value","density","enable","value_area","mapStateToProps","state","box","input","inputStateChange","user","userInfoUpdate","imageUrl","imageUrlUpdate","inputCheck","isSignedIn","signInUpdate","route","routeUpdate","mapDispatchToProps","dispatch","displayFaceBox","onInputChange","event","target","loadUser","data","onImageUrlInput","url","signInChange","bool","routeChange","App","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","onButtonSubmit","props","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","id","count","catch","err","onRouteChange","render","name","entries"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport { connect } from 'react-redux';\n\nimport { \n  addFaceBox,\n  changeInput,\n  updateUserInfo,\n  updateImageUrl,\n  updateSignIn,\n  updateRoute } from './actions';\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n      }\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    box: state.addFaceBox.box,\n    input: state.inputStateChange.input,\n    user: state.userInfoUpdate.user,\n    imageUrl: state.imageUrlUpdate.imageUrl,\n    inputCheck: state.imageUrlUpdate.inputCheck,\n    isSignedIn: state.signInUpdate.isSignedIn,\n    route: state.routeUpdate.route\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    displayFaceBox: (box) => dispatch(addFaceBox(box)),\n    onInputChange: (event) => dispatch(changeInput(event.target.value)),\n    loadUser: (data) => dispatch(updateUserInfo(data)),\n    onImageUrlInput: (url) => dispatch(updateImageUrl(url)),\n    signInChange: (bool) => dispatch(updateSignIn(bool)),\n    routeChange: (route) => dispatch(updateRoute(route))\n  }\n}\n\nclass App extends Component {\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  onButtonSubmit = () => {\n    const { displayFaceBox, input, onImageUrlInput, loadUser, user } = this.props;\n    // let {inputCheck} = this.props;\n    // console.log(\"inputCheck BEFORE onImageURLInput: \",inputCheck);\n    onImageUrlInput(input);\n    let inputCheck = this.props.inputCheck;\n    console.log(\"inputCheck AFTER onImageURLInput: \",inputCheck);\n    fetch(' https://boiling-sea-92403.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: input\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      if (response) {\n        fetch(' https://boiling-sea-92403.herokuapp.com/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          loadUser(count)\n        })\n        .catch(console.log)\n      }\n      displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n    console.log(\"inputCheck AFTER onImageURLInput AND AFTER FETCH: \",inputCheck);\n  }\n\n  onRouteChange = (route) => {\n    const {signInChange, routeChange} = this.props;\n    if (route === 'signout') {\n      signInChange(false);\n      routeChange('signin');\n    } else if (route === 'home') {\n      signInChange(true);\n      routeChange(route);\n    } else {\n      routeChange(route);\n    }\n  }\n\n  render() {\n    const { box, onInputChange, loadUser, user, imageUrl, isSignedIn, route } = this.props;\n    return (\n      <div className=\"App\">\n      <Particles className='particles'\n        params={particleOptions} />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} route={route}/>\n        { route === 'home'\n        ? <div>\n            <Logo />\n            <Rank name={user.name} entries={user.entries}/>\n            <ImageLinkForm\n              onInputChange={onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            /> \n            <FaceRecognition box={box} imageUrl={imageUrl}/>\n          </div>\n        : (\n            route === 'signin' \n            ? <SignIn \n                onRouteChange={this.onRouteChange}\n                loadUser={loadUser}\n              />\n            : <Register\n                onRouteChange={this.onRouteChange}\n                loadUser={loadUser}\n              />\n          )\n        }\n      </div>\n    );\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}